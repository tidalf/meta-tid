From 1bc304cd507fe9eb5673223f0d76ec0aa4ff55f3 Mon Sep 17 00:00:00 2001
From: mxt512 <mtx512@yahoo.co.uk>
Date: Thu, 13 Feb 2014 20:13:27 +0000
Subject: [PATCH] Add poweroff driver.

Existing pm_power_off function was in rtc-snvs. Given we need to reset the SAM3X and turn off the 5v supply on power down, lets implement a power-off driver to do this for now.

TODO: Not the cleanest solution but it works, should revisit.
---
 arch/arm/boot/dts/imx6q-udoo.dts | 7 +++++++
 drivers/power/reset/Kconfig      | 7 +++++++
 drivers/power/reset/Makefile     | 1 +
 drivers/rtc/rtc-snvs.c           | 4 ++++
 4 files changed, 19 insertions(+)

diff --git a/arch/arm/boot/dts/imx6q-udoo.dts b/arch/arm/boot/dts/imx6q-udoo.dts
index 0ce92cd..d53ec05 100644
--- a/arch/arm/boot/dts/imx6q-udoo.dts
+++ b/arch/arm/boot/dts/imx6q-udoo.dts
@@ -62,6 +62,13 @@
 		compatible = "fsl,mxc_v4l2_output";
 		status = "okay";
 	};
+
+	poweroff {
+		compatible = "udoo,poweroff";
+		sam3x_rst_gpio = <&gpio1 0 0>;
+		pwr_5v_gpio = <&gpio2 4 0>;
+	};
+
 };
 
 &hdmi_audio {
diff --git a/drivers/power/reset/Kconfig b/drivers/power/reset/Kconfig
index 349e9ae..c2c57c3 100644
--- a/drivers/power/reset/Kconfig
+++ b/drivers/power/reset/Kconfig
@@ -37,3 +37,10 @@ config POWER_RESET_VEXPRESS
 	help
 	  Power off and reset support for the ARM Ltd. Versatile
 	  Express boards.
+
+config POWER_RESET_UDOO
+	bool "UDOO power-off driver"
+	depends on POWER_RESET
+	help
+	  This driver supports powering down the UDOO.
+	  Say Y if you have a UDOO.
diff --git a/drivers/power/reset/Makefile b/drivers/power/reset/Makefile
index 372807f..62a822a 100644
--- a/drivers/power/reset/Makefile
+++ b/drivers/power/reset/Makefile
@@ -2,3 +2,4 @@ obj-$(CONFIG_POWER_RESET_GPIO) += gpio-poweroff.o
 obj-$(CONFIG_POWER_RESET_QNAP) += qnap-poweroff.o
 obj-$(CONFIG_POWER_RESET_RESTART) += restart-poweroff.o
 obj-$(CONFIG_POWER_RESET_VEXPRESS) += vexpress-poweroff.o
+obj-$(CONFIG_POWER_RESET_UDOO) += udoo-poweroff.o
diff --git a/drivers/rtc/rtc-snvs.c b/drivers/rtc/rtc-snvs.c
index 6c6b684..dc984b5 100644
--- a/drivers/rtc/rtc-snvs.c
+++ b/drivers/rtc/rtc-snvs.c
@@ -243,6 +243,7 @@ static irqreturn_t snvs_rtc_irq_handler(int irq, void *dev_id)
 	return events ? IRQ_HANDLED : IRQ_NONE;
 }
 
+#ifndef CONFIG_POWER_RESET_UDOO
 static void snvs_poweroff(void)
 {
 	u32 value;
@@ -251,6 +252,7 @@ static void snvs_poweroff(void)
 	/* set TOP and DP_EN bit */
 	writel(value | 0x60, snvs_base + SNVS_LPCR);
 }
+#endif
 
 static int snvs_rtc_probe(struct platform_device *pdev)
 {
@@ -307,8 +309,10 @@ static int snvs_rtc_probe(struct platform_device *pdev)
 	 * if no specific power off function in board file, power off system by
 	 * SNVS
 	 */
+#ifndef CONFIG_POWER_RESET_UDOO
 	if (!pm_power_off)
 		pm_power_off = snvs_poweroff;
+#endif
 
 	return 0;
 }
